openapi: 3.0.3
info:
  title: People Manager
  description: |-
    Este e um projeto para fins educacionais e teste dos conhecimentos
  contact:
    email: sauloddiniz@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:8080/api
tags:
  - name: person
    description: description by person
  - name: address
    description: address by person
paths:
  /person:
    post:
      tags:
        - person
      summary: Add a new person
      description: Add a new person
      operationId: addPerson
      requestBody:
        description: Create a person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonDto'
        required: true
      responses:
        '201':
          description: created
          headers:
            Location:
              description: URI location created by person
              schema:
                type: string
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
    get:
      tags:
        - person
      summary: Get person
      description: list all person
      operationId: listPerson
      parameters:
        - name: names
          in: query
          description: List of names to filter the persons
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonDto'
        '500':
          description: Internal server error
  /person/{personId}:
    put:
      tags:
        - person
      summary: Update person
      description: Update an existing person by Id
      operationId: updatePerson
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: string
          description: The ID of the person to be updated
      requestBody:
        description: Update an existent person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDto'
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
  /person/{personId}/adrresses:
    post:
      tags:
        - address
      summary: Add a new address
      description: Add a new address
      operationId: addAdrress
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: string
          description: The ID of the person
      requestBody:
        description: Create a address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressDto'
        required: true
      responses:
        '201':
          description: created
          headers:
            Location:
              description: URI location created by person
              schema:
                type: string
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
    get:
      tags:
        - address
      summary: Get addresses
      description: Get a addresses
      operationId: getAdrress
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: string
          description: The ID of the person
        - name: ids
          in: query
          description: List of ids to filter the address
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressDto'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
  /person/{personId}/adrresses/{addressId}:
    put:
      tags:
        - address
      summary: update address
      description: update address
      operationId: updateAdrress
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: string
          description: The ID of the person
        - in: path
          name: addressId
          required: true
          schema:
            type: string
          description: The ID of the address
      requestBody:
        description: update address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressDto'
        required: true
      responses:
        '200':
          description: success
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
  /person/{personId}/adrresses/{addressId}/principal:
    patch:
      tags:
        - address
      summary: update principal address
      description: update principal address
      operationId: updatePrincipalAdrress
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: string
          description: The ID of the person
        - in: path
          name: addressId
          required: true
          schema:
            type: string
          description: The ID of the address
      responses:
        '200':
          description: success
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
components:
  schemas:
    PersonDto:
      type: object
      required:
        - fullName
        - birthDate
      properties:
        fullName:
          type: string
        birthDate:
          type: string
          format: date
    AddressDto:
      type: object
      required:
        - state
        - street
        - zipCode
        - city
        - state
        - number
        - principal
      properties:
        street:
          type: string
          example: Duque de Caxias
        city:
          type: string
          example: Coronel Fabriciano
        state:
          type: string
          example: MG
        zipCode:
          type: string
          example: '35170-009'
        principal:
          type: boolean
          example: false
        number:
          type: string
          example: '264'
    ErrorResponse:
      type: object
      properties:
        date:
          type: string
          format: Wed May 08 00:00:00 BRT 2024
        status:
          type: integer
          example: 400
        path:
          type: string
          example: /person
        message:
          type: string
          example: Error field
        method:
          type: string
          example: POST